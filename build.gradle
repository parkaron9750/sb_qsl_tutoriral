	plugins {
        id 'java'
        id 'org.springframework.boot' version '3.4.2'
        id 'io.spring.dependency-management' version '1.1.7'
    }

    ext {
        set('springAiVersion', "1.0.0-M6")
		queryDslVersion = "5.0.0"
    }


    group = 'com.qsl'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.ai:spring-ai-mariadb-store-spring-boot-starter'

        implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

	def querydslDir = "$buildDir/generated/querydsl"

	sourceSets {
		main.java.srcDirs += [ querydslDir ]
	}

	tasks.withType(JavaCompile){
		options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
	}

	clean.doLast {
		file(querydslDir).deleteDir()
	}
